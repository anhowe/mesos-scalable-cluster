{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json# ",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name Prefix for the Storage Account where the Virtual Machine's disks will be placed.  StorageAccounts may contain at most variables('vmsPerStorageAccount')"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForContainerServicePublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the master."
      }
    },
    "masterVMSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size of the master node(s)"
      }
    },
    "masterCount": {
      "type": "int",
      "metadata": {
        "description": "The count of master"
      }
    },
    "masterConfiguration": {
      "type": "string",
      "metadata": {
        "description": "The configuration of the master specifying whether or not they also act as slaves"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The network subnet"
      }
    },
    "subnetRef": {
      "type": "string",
      "metadata": {
        "description": "The network subnet reference"
      }
    },
    "masterFirstAddr": {
      "type": "int",
      "metadata": {
        "description": "The value of the 4th IPv4 octet of the first master within the subnet"
      }
    },
    "masterVMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The vm name prefix of the master"
      }
    },
    "osImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The publisher name to identify the OS image."
      }
    },
    "osImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer name to identify the OS image."
      }
    },
    "osImageSKU": {
      "type": "string",
      "metadata": {
        "description": "The sku to identify the OS image."
      }
    },
    "osImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The version to identify the OS image."
      }
    }
  },
  "variables": {
    "availabilitySet": "masterAvailabilitySet",
    "nodesLbName": "nodeslb",
    "nodesLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('nodesLbName'))]",
    "nodesLbIPConfigName": "NodesLBFrontEnd",
    "nodesLbIPConfigID": "[concat(variables('nodesLbID'),'/frontendIPConfigurations/', variables('nodesLbIPConfigName'))]",
    "nodesLbBackendPoolName": "node-pool"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('dnsNameForContainerServicePublicIP')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForContainerServicePublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('nodesLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('dnsNameForContainerServicePublicIP'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('nodesLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('dnsNameForContainerServicePublicIP'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('nodesLbBackendPoolName')]"
          }
        ],
        "probes": [],
        "loadBalancingRules": [],
        "inboundNatRules": [
          {
            "name": "[concat('SSH-',parameters('masterVMNamePrefix'), '1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2211,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',parameters('masterVMNamePrefix'), '2')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2212,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',parameters('masterVMNamePrefix'), '3')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2213,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',parameters('masterVMNamePrefix'), '4')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2214,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',parameters('masterVMNamePrefix'), '5')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2215,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('masterVMNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[parameters('masterCount')]"
      },
      "dependsOn": [
        "[variables('nodesLbID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(parameters('subnetPrefix'),'0/24')[0], copyIndex(masterFirstAddr))]",
              "subnet": {
                "id": "[parameters('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('nodesLbID'), '/backendAddressPools/', variables('nodesLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('nodesLbID'),'/inboundNatRules/SSH-',parameters('masterVMNamePrefix'),copyIndex(1))]"
                }
              ]
            }
          }
        ]
      }
    }
  ]
}
