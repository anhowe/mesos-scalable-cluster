{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name Prefix for the Storage Account where the Virtual Machine's disks will be placed.  StorageAccounts may contain at most variables('vmsPerStorageAccount')"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "nodeCount": {
      "type": "int",
      "metadata": {
        "description": "The number of mesos masters for the cluster."
      }
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of mesos masters for the cluster."
      }
    },
    "masterConfiguration": {
      "type": "string",
      "defaultValue": "masters-are-agents",
      "allowedValues": [
        "masters-are-agents",
        "masters-are-not-agents"
      ]
    }
  },
  "variables": {
    "vmNamePrefix": "node",
    "availabilitySetNodes": "avail-set",
    "osImagePublisher": "Canonical",
    "osImageOffer": "UbuntuServer",
    "osImageSKU" : "14.04.3-LTS",
    "publicIPAddressName": "myPublicIP",
    "publicIPAddressType": "Dynamic",
    "OSDiskName": "osdisk",
    "vmsPerStorageAccount": 20,
    "storageAccountsCount": "[add(div(parameters('nodeCount'), variables('vmsPerStorageAccount')), 1)]",
    "nicName": "vmNic",
    "virtualNetworkName": "VNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "subnetName": "Subnet",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "nsgName": "node-nsg",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "storageAccountType": "Standard_LRS",
    "vhdBlobContainer": "vhds",
    "nodesLbName": "nodeslb",
    "nodesLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('nodesLbName'))]",
    "nodesLbIPConfigName": "NodesLBFrontEnd",
    "nodesLbIPConfigID": "[concat(variables('nodesLbID'),'/frontendIPConfigurations/', variables('nodesLbIPConfigName'))]",
    "nodesLbBackendPoolName": "node-pool",
    "validateNodeGreaterThanEqualMasterCount": "[div(1, div(parameters('nodeCount'),parameters('masterCount')))]",
    "validateNoMoreThan10Nodes":"[div(1,div(10,parameters('nodeCount')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('newStorageAccountNamePrefix'),copyIndex(1))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('storageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetNodes')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmNamePrefix'), copyIndex(1), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('nodesLbName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/24')[0], copyIndex(101))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('nodesLbID'), '/backendAddressPools/', variables('nodesLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('nodesLbID'),'/inboundNatRules/SSH-',variables('vmNamePrefix'),copyIndex(1))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('nodesLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('nodesLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('nodesLbBackendPoolName')]"
          }
        ],
        "probes": [],
        "loadBalancingRules": [],
        "inboundNatRules": [
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2211,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '2')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2212,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '3')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2213,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '4')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2214,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '5')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2215,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '6')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2216,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '7')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2217,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '8')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2218,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '9')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2219,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[concat('SSH-',variables('vmNamePrefix'), '10')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('nodesLbIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 2220,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNamePrefix'), copyIndex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountNamePrefix'),add(1,div(copyIndex(),parameters('nodeCount'))))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('vmNamePrefix'), copyIndex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetNodes'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetNodes'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmNamePrefix'), copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmNamePrefix'), copyIndex(1),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', parameters('newStorageAccountNamePrefix'),add(1,div(copyIndex(),parameters('nodeCount'))), '.blob.core.windows.net/', variables('vhdBlobContainer'), '/', variables('vmNamePrefix'), copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNamePrefix'), copyIndex(1), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'), copyIndex(1), '/configuremaster')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('nodeCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNamePrefix'), copyIndex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/anhowe/mesos-scalable-cluster/master/configure-mesos-cluster.sh"
          ],
          "commandToExecute": "[concat('/bin/bash configure-mesos-cluster.sh ', parameters('masterCount'), ' ', parameters('masterConfiguration'))]"
        }
      }
    }
  ]
}
